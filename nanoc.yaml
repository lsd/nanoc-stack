# List of file extensions that nanoc will consider to be textual rather than # binary. If an item with an extension not in this list is found,  the file # will be considered as binary.
text_extensions: [ 
  'coffee', 'css', 'erb', 'haml', 'handlebars', 'hb', 
  'htm', 'html', 'js', 'less', 'markdown', 'md', 'ms', 
  'mustache', 'php', 'rb', 'sass', 'scss', 'txt', 'xhtml', 
  'xml' 
]

# The path to the directory where all generated files will be written to. This # can be an absolute path starting with a slash, but it can also be path # relative to the site directory.
output_dir: output

# A list of index filenames, i.e. names of files that will be served by a web # server when a directory is requested. Usually, index files are named # “index.html”, but depending on the web server, this may be something else, # such as “default.htm”. This list is used by nanoc to generate pretty URLs.
index_filenames: [ 'index.htm' ]

# Whether or not to generate a diff of the compiled content when compiling a # site. The diff will contain the differences between the compiled content # before and after the last site compilation.
enable_output_diff: true

prune:
  # Automatically remove files not managed by nanoc from output. Dangerous! keep off
  auto_prune: false

  # Which files and directories you want to exclude from pruning. From your output directory, exclude VCS directories such as .git
  exclude: [ '.git', '.swp', '.DS_Store', '.tmp', '.bk', '.hg', '.svn', 'CVS' ]

# Sources where nanoc loads its data from. This is an array of hashes; element represents single data source.
# Default: A single data source that reads data from the “content/” and “layout/” directories in the site directory.
data_sources:
  -
    # The type is the identifier of the data source. default = filesystem_unified
    type: filesystem_unified

    # The path where items should be mounted (comparable to mount points in Unix-like systems). This is “/” by default, meaning that items will have
    # “/” prefixed to their identifiers. If the items root were “/en/” instead, content/about.html becomes “/en/about/”
    items_root: /ro0t/

    # The path where layouts should be mounted. The layouts root behaves the same as the items root, but applies to layouts rather than items.
    layouts_root: /design

    # Whether to allow periods in identifiers. When turned off, everything past the first period is considered to be the extension, and when
    # turned on, only the characters past the last period are considered to be the extension. For example,  a file named “content/about.html.erb”
    # will have the identifier “/about/” when turned off, but when turned on it will become “/about.html/” instead.
    allow_periods_in_identifiers: false

# Configuration for the “watch” command, which watches a site for changes and recompiles if necessary.
watcher:
  # A list of directories to watch for changes. When editing this, EXCLUDE tmp and output
  dirs_to_watch: [ 'content', 'layouts', 'lib' ] # never include 'tmp' and 'output' here else infinite loop

  # Single files to watch for changes. don’t put any files from the “output/” or “tmp/” directories in here.
  files_to_watch: [ 'nanoc.yaml', 'Rules' ]

  # When to send notifications (using Growl or notify-send).
  notify_on_compilation_success: true
  notify_on_compilation_failure: true
